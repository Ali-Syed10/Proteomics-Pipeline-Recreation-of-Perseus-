# Create DNA string set

Fasta.1 = read.fasta(file.choose(), as.string = TRUE, forceDNAtolower = FALSE)

Fasta.1 = unlist(Fasta.1)

Fasta.1 = as.data.frame(Fasta.1)

# Read the fasta file 

DNA.fasta = readDNAStringSet(file.choose(), format =  "fasta")

# Convert DNA string set into a data frame which then can be used to edit the names 

DNA.data <- as.data.frame(DNA.fasta) # Conversion to data frame

DNA.data$x = Fasta.1$Fasta.1 #Reassignment of columns

colnames(DNA.data) = "Seq" # Renaming of columns

Edit.Data = DNA.data %>% mutate(sequence_match = str_match_all(Seq, "R..S|R..T|R..Y")) # Extract phosphorecognition sequences

Seq_mat = sapply(Edit.Data$sequence_match, function(x) paste(unlist(x), collapse = " ")) #Remove spaces between names

Edit.Data$sequence_match = Seq_mat #Reassign the names to the current column


Data.232S <- word(rownames(DNA.data), 2L, 3L) # This will extract the protein names

Data.23S <- word(rownames(DNA.data), 1L, 1L) # This is to extract protein ids

Data.23S <- gsub("^tr|", " ",Data.23S ) # Protein ids are not a clean extract thus further data manipulation is required

New.data = as.data.frame(Data.23S,Data.232S ) 

Protein.id.new = New.data[1:28,] # Some of the proteins id still have a unneccesary symbols with them. Thus further removal is required. The first 28 rows manipulation will be done seperately as they are different from the rest. 

Protein.id.new.1 <- word(Protein.id.new,5L, 10L) # Clean extraction of protein ids

Protein.id.new.2 = Data.232S[1:28] # The first 28 proteins have to be edited more thoroughly 

Final.X1 = cbind(Protein.id.new.2, Protein.id.new.1) # Mergeing the two objects into a dataframe

Dat.2 = New.data[-(1:28),] # All the protein names other than the first 28 rows are edited 

Name.1 <- word(Dat.2,3L, 8L) # Editing of names

Dat.3 = as.data.frame(Name.1) # Replacement of names

Protein.id.new.3 = Data.232S[-(1:28)] 

Dat.4 = cbind(Protein.id.new.3,Name.1)
Final.X = rbind(Final.X1,Dat.4)
Final.X = data.frame(Final.X)
colnames(Final.X) = c("Protein_Name", "Proteins")

Final.X = as.data.frame(apply(Final.X,2,function(x)gsub('\\s+', '',x))) 

Protein.data.set = cbind(Final.X, Edit.Data$sequence_match) 
```

Web = Protein.data.set$`Edit.Data$sequence_match`

Web = strsplit(er, "\\s+")

Web = unlist(Web)

ggseqlogo(Web, method = "prob") # Create Web Logo
